/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package tp1dpbo2022;

import com.mysql.jdbc.Statement;
import dbConnection.Koneksi;
import entitas.ent_Buku;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import query.sql_query_buku;
/**
 *
 * @author LENOVO
 */
public class formUpdBuku extends javax.swing.JDialog {
    BufferedImage image;
    String path;
    byte[] bitArray = null;
    public boolean newImage = false;
    String id;
    MainMenu menu = new MainMenu();
    formDataBuku form = new formDataBuku();
    /**
     * Creates new form formUpdBuku
     */
    public formUpdBuku() {
        initComponents();
    }
    
    public void fillFieldBuku(String penerbit, String author, String desc, String id){
        try {
            Statement st = (Statement) Koneksi.getCekKoneksi().createStatement();
            ResultSet rs = st.executeQuery("select img_buku from tbl_buku where id_buku="+id);
            
            while(rs.next()){
                byte[] imageData = rs.getBytes("img_buku");
                ImageIcon format = new ImageIcon(imageData);
                Image img = format.getImage();
                Image image = img.getScaledInstance(imgInpBuku.getWidth(), imgInpBuku.getHeight(), Image.SCALE_SMOOTH);
                ImageIcon outImg = new ImageIcon(image);
                
                this.id = id;
                imgInpBuku.setIcon(outImg);
                txtField_inpAuthor.setText(author);
                txtField_inpPenerbit.setText(penerbit);
                txtField_inpDesc.setText(desc);
                
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(formUpdBuku.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        form_Buku = new javax.swing.JPanel();
        label_JudulFormBuku = new javax.swing.JLabel();
        lbl_penerbit = new javax.swing.JLabel();
        lbl_author = new javax.swing.JLabel();
        txtField_inpAuthor = new javax.swing.JTextField();
        txtField_inpPenerbit = new javax.swing.JTextField();
        lbl_inpGambarBuku = new javax.swing.JLabel();
        jScrollPane_imgInpBuku = new javax.swing.JScrollPane();
        imgInpBuku = new javax.swing.JLabel();
        txtField_dirGambarBuku = new javax.swing.JTextField();
        btn_choseImgFormBuku = new javax.swing.JButton();
        btn_SaveFormBuku = new javax.swing.JButton();
        btn_cancel = new javax.swing.JButton();
        txtField_inpDesc = new javax.swing.JTextField();
        lbl_desc = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        label_JudulFormBuku.setFont(new java.awt.Font("Myriad Pro", 2, 24)); // NOI18N
        label_JudulFormBuku.setText("Form  Update Data Author");

        lbl_penerbit.setText("Penerbit");

        lbl_author.setText("Author");

        txtField_inpAuthor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtField_inpAuthorActionPerformed(evt);
            }
        });

        txtField_inpPenerbit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtField_inpPenerbitActionPerformed(evt);
            }
        });

        lbl_inpGambarBuku.setText("Gambar");

        jScrollPane_imgInpBuku.setViewportView(imgInpBuku);

        txtField_dirGambarBuku.setEditable(false);

        btn_choseImgFormBuku.setText("Choose");
        btn_choseImgFormBuku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_choseImgFormBukuActionPerformed(evt);
            }
        });

        btn_SaveFormBuku.setText("Save");
        btn_SaveFormBuku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SaveFormBukuActionPerformed(evt);
            }
        });

        btn_cancel.setText("Cancel");
        btn_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelActionPerformed(evt);
            }
        });

        txtField_inpDesc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtField_inpDescActionPerformed(evt);
            }
        });
        txtField_inpDesc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtField_inpDescKeyTyped(evt);
            }
        });

        lbl_desc.setText("Desc");

        javax.swing.GroupLayout form_BukuLayout = new javax.swing.GroupLayout(form_Buku);
        form_Buku.setLayout(form_BukuLayout);
        form_BukuLayout.setHorizontalGroup(
            form_BukuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(form_BukuLayout.createSequentialGroup()
                .addContainerGap(41, Short.MAX_VALUE)
                .addGroup(form_BukuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(form_BukuLayout.createSequentialGroup()
                        .addGroup(form_BukuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_author)
                            .addComponent(lbl_penerbit))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(form_BukuLayout.createSequentialGroup()
                        .addGroup(form_BukuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_desc)
                            .addGroup(form_BukuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(label_JudulFormBuku)
                                .addGroup(form_BukuLayout.createSequentialGroup()
                                    .addComponent(lbl_inpGambarBuku)
                                    .addGap(32, 32, 32)
                                    .addGroup(form_BukuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(form_BukuLayout.createSequentialGroup()
                                            .addComponent(txtField_dirGambarBuku, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(btn_choseImgFormBuku, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jScrollPane_imgInpBuku, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtField_inpDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtField_inpAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtField_inpPenerbit, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(form_BukuLayout.createSequentialGroup()
                                            .addComponent(btn_SaveFormBuku)
                                            .addGap(18, 18, 18)
                                            .addComponent(btn_cancel))))))
                        .addGap(0, 56, Short.MAX_VALUE))))
        );
        form_BukuLayout.setVerticalGroup(
            form_BukuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(form_BukuLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(label_JudulFormBuku)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(form_BukuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_penerbit)
                    .addComponent(txtField_inpPenerbit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(form_BukuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_author)
                    .addComponent(txtField_inpAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(form_BukuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_desc)
                    .addComponent(txtField_inpDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(form_BukuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_inpGambarBuku)
                    .addComponent(btn_choseImgFormBuku)
                    .addComponent(txtField_dirGambarBuku, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addComponent(jScrollPane_imgInpBuku, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(form_BukuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_SaveFormBuku)
                    .addComponent(btn_cancel))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(form_Buku, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(form_Buku, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtField_inpAuthorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtField_inpAuthorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtField_inpAuthorActionPerformed

    private void txtField_inpPenerbitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtField_inpPenerbitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtField_inpPenerbitActionPerformed

    private void btn_choseImgFormBukuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_choseImgFormBukuActionPerformed
        // TODO add your handling code here:
        JFileChooser choose = new JFileChooser(System.getProperty("user.home"));
        choose.setFileSelectionMode(JFileChooser.FILES_ONLY);
        choose.setFileFilter(new FileNameExtensionFilter("jpg|png|bmp|","jpg","png","bmp"));
        if(choose.showOpenDialog(this) == JFileChooser.APPROVE_OPTION){
            File file = choose.getSelectedFile();
            try {
                if (file.length() > 1024000) {
                    getToolkit().beep();
                    JOptionPane.showMessageDialog(rootPane, "Gambar Terlalu Besar", "Max 1MB", JOptionPane.WARNING_MESSAGE);
                }
                else{
                    image  = ImageIO.read(file);
                    Image inpImg = image.getScaledInstance(imgInpBuku.getWidth(), imgInpBuku.getHeight(), image.SCALE_SMOOTH);
                    ImageIcon icon = new ImageIcon(inpImg);
                    imgInpBuku.setIcon(icon);
                    path = file.getAbsolutePath();
                    txtField_dirGambarBuku.setText(file.getName());
                    newImage = true;
                }
            } catch (Exception e) {
            }

        }
    }//GEN-LAST:event_btn_choseImgFormBukuActionPerformed

    private void btn_SaveFormBukuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SaveFormBukuActionPerformed
        // TODO add your handling code here:
        if ((txtField_inpPenerbit.getText().equals("")) || (txtField_inpAuthor.getText().equals("")) || (txtField_inpDesc.getText().equals(""))){
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Field tidak boleh kosong!");
        }else{
            try {
                ent_Buku databuku = new ent_Buku();
                
//                dataauthor.setId_author(id);
                databuku.setPenerbit(txtField_inpPenerbit.getText());
                databuku.setAutor((txtField_inpAuthor.getText()));
                databuku.setDesc((txtField_inpDesc.getText()));
                
                if(newImage == true){
                    //input gambar
                    ByteArrayOutputStream outImg = new ByteArrayOutputStream();
                    File imgBuku = new File(path);
                    FileInputStream input = new FileInputStream(imgBuku);

                    try {
                        byte[] buffer = new byte[1024];
                        for(int readbyte;(readbyte = input.read(buffer)) !=-1;){
                            outImg.write(buffer, 0, readbyte);
                        }

                        bitArray = outImg.toByteArray();
                        databuku.setImg(bitArray);
                    } catch (Exception e) {
                    }   
                }
                else{
                    try {
                        Statement st = (Statement) Koneksi.getCekKoneksi().createStatement();
                        ResultSet rs = st.executeQuery("select img_buku from tbl_buku where id_buku="+id);

                        while(rs.next()){
                            byte[] imageData = rs.getBytes("img_buku");
                            databuku.setImg(imageData);
                        }
                    } catch (SQLException ex) {
                        Logger.getLogger(formUpdBuku.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                
                
                sql_query_buku query = new sql_query_buku();
                query.updateDataBuku(databuku, id);

                dispose();
                MainMenu obj = new MainMenu();
                obj.setVisible(true);
            } catch (Exception e) {
                System.err.println(e);
                JOptionPane.showMessageDialog(null, "Proses Update Error!");
            }
        }
    }//GEN-LAST:event_btn_SaveFormBukuActionPerformed

    private void txtField_inpDescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtField_inpDescActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtField_inpDescActionPerformed

    private void txtField_inpDescKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtField_inpDescKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtField_inpDescKeyTyped

    private void btn_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelActionPerformed
        // TODO add your handling code here:
        dispose();
        menu.setVisible(true);
       
    }//GEN-LAST:event_btn_cancelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(formUpdBuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(formUpdBuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(formUpdBuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(formUpdBuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new formDataAuthor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_SaveFormBuku;
    private javax.swing.JButton btn_cancel;
    private javax.swing.JButton btn_choseImgFormBuku;
    private javax.swing.JPanel form_Buku;
    private javax.swing.JLabel imgInpBuku;
    private javax.swing.JScrollPane jScrollPane_imgInpBuku;
    private javax.swing.JLabel label_JudulFormBuku;
    private javax.swing.JLabel lbl_author;
    private javax.swing.JLabel lbl_desc;
    private javax.swing.JLabel lbl_inpGambarBuku;
    private javax.swing.JLabel lbl_penerbit;
    private javax.swing.JTextField txtField_dirGambarBuku;
    private javax.swing.JTextField txtField_inpAuthor;
    private javax.swing.JTextField txtField_inpDesc;
    private javax.swing.JTextField txtField_inpPenerbit;
    // End of variables declaration//GEN-END:variables
}
